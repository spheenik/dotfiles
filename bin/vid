#!/usr/bin/lua

function readProcess(fileName)
	local f = assert(io.popen(fileName, "r"), "failed to open " .. fileName)
	local content = assert(f:read("*a"), "failed to read output from " .. fileName)
	f:close()
	return content
end

function getHostName()
    local hostName = string.gsub(readProcess("/bin/hostname"), "\n$", "")
	return hostName
end

function readConfig() 
	return dofile(os.getenv("HOME") .. "/.vid/modes." .. getHostName() .. ".lua")
end

function applyMode(mode)
	local dpi = mode.scale * 96
	os.execute('xrandr ' .. mode.cmd .. ' --dpi ' .. dpi)
	os.execute('echo Xft.dpi: ' .. dpi .. ' | xrdb -merge')
	os.execute('echo rofi.dpi: ' .. dpi .. ' | xrdb -merge')
	os.execute('gsettings set org.gnome.desktop.interface scaling-factor ' .. mode.scale)
	os.execute('echo "awesome.restart()" | awesome-client 2>/dev/null')
end

function executeCommands(commands)
    for i,v in ipairs(commands) do
        os.execute(v)
    end
end

function findMode(config, name)
    for i,v in ipairs(config.modes) do
        if v.name == name then
			return v
		end
    end
end


-- START HERE

local config = readConfig()
local cmd = arg[1]

if not cmd then
	print("usage: vid <mode>")
    print("  default" .. ": " .. "use '" .. config.default .. "'")
    for i,v in ipairs(config.modes) do
        print("  " .. v.name .. ": " .. v.description)
    end
	return
end

if cmd == "_completion" then
    local default = findMode(config, config.default)
    print("default" .. ":" .. default.description)
    for i,v in ipairs(config.modes) do
        print(v.name .. ":" .. v.description)
    end
    return
end

if cmd == "init" then
	executeCommands(config.startup)
	applyMode(findMode(config, config.default))	
	return
end

if cmd == "default" then
	cmd = config.default
end

local mode = findMode(config, cmd)

if mode == nil then
    print("unknown mode '" .. cmd .. "'")
    return
end

applyMode(findMode(config, cmd))	

-- vim: filetype=lua:expandtab:shiftwidth=4:tabstop=4:softtabstop=4
